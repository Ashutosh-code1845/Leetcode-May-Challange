//Radix Sort

class Solution {
public:
    int maximumGap(vector<int>& nums) {
        int res = INT_MIN, n = nums.size();
        if(n < 2) return 0; 
        radixSort(nums);
        for(int i=1; i<n; i++)
            if(nums[i]-nums[i-1] > res)
                res = nums[i] - nums[i-1];

        return res;
            
    }
    
    void radixSort(vector<int> &nums)
    {
        if(nums.size() < 2) return;
        int maxEle = nums[0];
        for(int i: nums)
            if(i>maxEle)    maxEle = i;
        
        for(int i=1; maxEle/i >0; i*=10)
        {
            countSortForRadix(nums, i);
        }
    }
    
    void countSortForRadix(vector<int> &nums, int exp)
    {
        vector<int> count(10, 0), res(nums.size());
        for(int i: nums)
            count[(i/exp)%10]++;
        for(int i=1; i<10; i++)
            count[i] += count[i-1];
        for(int i=nums.size()-1; i>=0; i--)
        {
            res[count[(nums[i]/exp)%10]-1] = nums[i];
            count[(nums[i]/exp)%10]--;
        }
        nums=res;
        
    }
};
